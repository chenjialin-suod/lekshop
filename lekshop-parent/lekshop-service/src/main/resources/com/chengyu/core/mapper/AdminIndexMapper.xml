<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.chengyu.core.mapper.CustomAdminIndexMapper">
	
	<!-- 会员数量,今日注册,接手数量,商家数量 -->
	<select id="countMember" resultType="java.util.Map">
	    select
	      	count(*) totalNum,
	      	count((to_days(add_time) = to_days(now())) or null) todayMemberNum,
	      	count((type = 2) or null) sellerNum
      	from ums_member
      	where status = '1'
	</select>

	<!-- 总商品数 -->
	<select id="countGoods" resultType="java.util.Map">
		select
		count(id) goodsNum
		from pms_goods
		where status in(1,2)
	</select>

	<!-- 统计最近10天的数据 -->
	<select id="countMemberNumByLastTenDays" resultType="java.util.Map">
		select
			date(add_time) addTime, COUNT(*) num
		from ums_member
		where status = '1'
		  and DATE_SUB(CURDATE(), INTERVAL 10 DAY) &lt;= date(add_time)
		GROUP BY date(add_time) order by date(add_time) asc
	</select>

	<!-- 待审核身份证 -->
	<select id="countVerifyIdCardNum" resultType="java.util.Map">
	    select
	      	count(*) idcardVerifyNum
      	from ums_member_realname
      	where status = 0
	</select>

	<!-- 待审核银行卡 -->
	<select id="countVerifyBankNum" resultType="java.util.Map">
	    select
	      	count(*) bankVerifyNum
      	from ums_member_bank
      	where status = 0
	</select>

	<!-- 待审核充值 -->
	<select id="countVerifyRechargeNum" resultType="java.util.Map">
	    select
	      	count(*) rechargeVerifyNum
      	from ums_member_recharge
      	where status = '0'
	</select>

	<!-- 待审核提现 -->
	<select id="countVerifyWithdrawNum" resultType="java.util.Map">
	    select
	      	count(*) withdrawVerifyNum
      	from ums_member_withdraw
      	where status = '0'
	</select>

	<!-- 充值总额 -->
	<select id="countRechargeAmount" resultType="java.util.Map">
	    select
	    	ifnull(sum(real_amount),0) rechargeAmount
      	from ums_member_recharge
      	where status = '1'
	</select>

	<!-- 提现总额 -->
	<select id="countWithdrawAmount" resultType="java.util.Map">
	    select
	      	ifnull(sum(total_amount),0) withdrawAmount
      	from ums_member_withdraw
      	where status = '1'
	</select>

	<!-- 用户账户金额 -->
	<select id="countMemberAccount" resultType="java.util.Map">
	    select
	      	ifnull(sum(amount+freeze_amount),0) totalBalance,
	      	ifnull(sum(mission+freeze_mission),0) totalMission,
	      	ifnull(sum(spmission+freeze_spmission),0) totalSpmission
      	from ums_member_account
	</select>

	<!-- 统计订单 待付款， 待发货， 待收货， 总订单数，总订单金额-->
	<select id="countOrder" resultType="java.util.Map">
		select
			count(status = 0 or null) as waitPayNum,
			count(status = 1 or null) as waitDeliveryNum,
			count(status = 2 or null) as waitReceiveNum,
			count(status in(1,2,3) or null) as totalOrderNum,
			ifnull(sum(if(status in(1,2,3), pay_price,0)),0) as orderAmount
		from oms_order
		where del_ind = 0
	</select>

	<!-- 统计售后订单-->
	<select id="countRefund" resultType="java.util.Map">
		select
			count(id) as refundNum
		from oms_order_refund
		where status != 6
	</select>

	<!-- 统计商品访问次数-->
	<select id="countViewGoods" resultType="java.util.Map">
		select
			count(id) as goodsViewNum
		from ums_member_view_goods
	</select>

	<!--在售SKU总量-->
	<select id="countSku" resultType="java.util.Map">
		select
			count(id) as skuNum
		from pms_goods_sku
	</select>

	<!-- 统计本月门店销售排行 -->
	<select id="getShopSellRankList" resultType="java.util.Map">
		select
			shop_id as shopId, shop_name as shopName,
			sum(total_price) totalAmount,
			count(*) num
		from oms_order
		where status in (1,2,3) and add_time &gt;= #{beginTime} and add_time &lt;= #{endTime}
		group by shop_id order by sum(total_price) desc limit 10
	</select>

	<!-- 统计本月商品销售排行 -->
	<select id="getGoodsSellRankList" resultType="java.util.Map">
		select
			goods_name as goodsName, goods_main_img as goodsMainImg,
			sum(buy_total_price) buyTotalPrice,
			sum(buy_num) num
		from oms_order_detail
		where status in (1,2,3) and add_time &gt;= #{beginTime} and add_time &lt;= #{endTime}
		group by goods_id order by sum(buy_num) desc limit 10
	</select>


</mapper>